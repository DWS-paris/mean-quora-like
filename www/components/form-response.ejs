<button id="addResponseBtn">Proposer une réponse</button>
<form action="#" id="reponseForm">
    <input type="text" id="parentItem" name="parentItem" required hidden minlength="5" value="<%- parentItem %>">
    <textarea name="headlineResponse" id="headlineResponse" required minlength="20" placeholder="Min. 20 caractères"></textarea>
    <button type="submit">Répondre à la question</button> <span id="responseFormResponse"></span>
</form>

<script>
    // Wait for DOM content
    document.addEventListener('DOMContentLoaded', () => {

        // Definition
        const addResponseBtn = document.querySelector('#addResponseBtn');
        let responseFormIsOpen = false;
        const reponseForm = document.querySelector('#reponseForm');
        const headline = document.querySelector('#headlineResponse');
        const parentItem = document.querySelector('#parentItem');
        const responseFormResponse = document.querySelector('#responseFormResponse');

        // Methods
        const getFormSubmit = () => {
            reponseForm.addEventListener('submit', event => {
                // Stop default to use Javascript
                event.preventDefault();

                // Check form values
                if( headline.value.length > 19){

                    // Use asyncFetch method to save data
                    asyncFetch('http://localhost:7659/api/comment', 'POST', { headline:  headline.value, parentItem: parentItem.value })
                    .then( data => {
                        // Display message
                        responseFormResponse.innerHTML = data.message
                        setTimeout( () => {
                            responseFormResponse.innerHTML = ''
                        }, 3000 )

                        // Reset form
                        headline.value = '';
                    })
                    .catch( err => {
                        // Display message
                        responseFormResponse.innerHTML = err.error || err.message
                        setTimeout( () => {
                            responseFormResponse.innerHTML = ''
                        }, 3000 )
                    } )
                }
            })
        }

        const toggleOpenForm = () => {
            addResponseBtn.addEventListener('click', () => {
                if(responseFormIsOpen){
                    addResponseBtn.textContent = 'Proposer une réponse';
                    reponseForm.classList.remove('open');
                    responseFormIsOpen = false
                }
                else{
                    addResponseBtn.textContent = 'Fermer';
                    reponseForm.classList.add('open');
                    responseFormIsOpen = true
                }
            });
        }

        // Start interface
        toggleOpenForm();
        getFormSubmit();
    })
</script>
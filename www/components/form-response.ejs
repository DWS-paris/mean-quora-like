<section id="headerResponse">
    <form action="#" id="reponseForm">
        <p type="text" id="questionHeadlineInput"></p>
        <input type="text" id="parentItem" name="parentItem" required hidden minlength="5">
        <textarea name="headlineResponse" id="headlineResponse" required minlength="20" placeholder="C'est quoi ta rÃ©ponse ?"></textarea>
        <button type="submit" class="submitFomrButton"><img src="./img/check.png" alt="Enregistrer"></button> <span id="responseFormResponse"></span>
        <button type="button" class="closeButtonFormButton" id="closeFromResponse"><img src="./img/close.png" alt="Ferme"></button>
    </form>
</section>

<script>
    // Wait for DOM content
    document.addEventListener('DOMContentLoaded', () => {

        // Definition
        let responseFormIsOpen = false;
        const reponseForm = document.querySelector('#reponseForm');
        const headline = document.querySelector('#headlineResponse');
        const parentItem = document.querySelector('#parentItem');
        const responseFormResponse = document.querySelector('#responseFormResponse');

        // Methods
        const getFormSubmit = () => {
            reponseForm.addEventListener('submit', event => {
                // Stop default to use Javascript
                event.preventDefault();

                // Check form values
                if( headline.value.length > 19){

                    // Use asyncFetch method to save data
                    asyncFetch('http://localhost:7659/api/comment', 'POST', { headline:  headline.value, parentItem: parentItem.value })
                    .then( data => {
                        // Display message
                        responseFormResponse.innerHTML = data.message
                        setTimeout( () => {
                            responseFormResponse.innerHTML = ''
                        }, 3000 )

                        // Reset form
                        headline.value = '';
                    })
                    .catch( err => {
                        // Display message
                        responseFormResponse.innerHTML = err.error || err.message
                        setTimeout( () => {
                            responseFormResponse.innerHTML = ''
                        }, 3000 )
                    } )
                }
            })
        }
        // Start interface
        getFormSubmit();
    })
</script>
<form action="#">
    <label for="pseudo">Nom complet</label>
    <input type="text" id="pseudo" name="pseudo" required minlength="5">
    
    <label for="email">Email</label>
    <input type="email" id="email" name="email" required minlength="5">

    <label for="password">Mot de passe</label>
    <input type="password" id="password" name="password" required minlength="5">

    <button type="submit">Inscription</button> <span id="formResponse"></span>
</form>

<script>
    // Wait for DOM content
    document.addEventListener('DOMContentLoaded', () => {

        // Definition
        const myForm = document.querySelector('form');
        const userEmail = document.querySelector('#email');
        const userPassword = document.querySelector('#password');
        const userPseudo = document.querySelector('#pseudo');
        const formResponse = document.querySelector('#formResponse');

        // Methods
        const getFormSubmit = () => {
            myForm.addEventListener('submit', event => {
                // Stop default to use Javascript
                event.preventDefault();

                // Check form values
                if( userEmail.value.length > 4 && userPassword.value.length > 4 && userPseudo.value.length > 4){

                    // Use asyncFetch method to save data
                    asyncFetch('http://localhost:7659/api/auth/register', 'POST', { email: userEmail.value, password: userPassword.value, pseudo: userPseudo.value})
                    .then( data => {
                        // Display message
                        formResponse.innerHTML = 'Inscription réussie, vous allez être redirigé...'
                        setTimeout( () => {
                            location = '/login'  
                        }, 3000 )
                        
                        // Reset form
                        userEmail.value = '';
                        userPassword.value = '';
                    })
                    .catch( err => {
                        // Display message
                        formResponse.innerHTML = err.error
                        setTimeout( () => {
                            formResponse.innerHTML = ''
                        }, 3000 )
                    } )
                }
            })
        }

        // Start interface
        getFormSubmit();
    })
</script>
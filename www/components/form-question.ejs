<section id="headerForm">
    <form action="#" id="questionForm" novalidate>
        <div class="box">
            <select name="questionCategory" id="questionCategory" required>
                <option value="NULL">Selectonner une catégorie</option>
                <option value="html">HTML</option>
                <option value="css">CSS</option>
                <option value="javascript">Javascript</option>
                <option value="php">PHP</option>
                <option value="backend">Technologie Serveur</option>
                <option value="frontend">Technologie Client</option>
                <option value="pwa">PWA</option>
                <option value="git">Git/Gihub</option>
                <option value="technique">Bonnes pratiques</option>
            </select>
        </div>

        <input type="text" id="parentItem" name="headline" id="headlineQuestion" required hidden minlength="5">

        <textarea name="headlineQuestion" id="headlineQuestion" required minlength="20"></textarea>

        <button type="submit" class="submitFomrButton"><img src="./img/check.png" alt="Enregistrer"></button> <span id="formResponse"></span>
        <button type="button" class="closeButtonFormButton" id="closeFromQuestion"><img src="./img/close.png" alt="Ferme"></button>
    </form>
</section>

<script>
    // Wait for DOM content
    document.addEventListener('DOMContentLoaded', () => {

        // Definition
        const headlineQuestion = new SimpleMDE({ 
            element: document.querySelector("#headlineQuestion"),
            codeSyntaxHighlighting: true
        });
        // const headlineQuestion = document.querySelector('#headlineQuestion');

        const myFormQuestion = document.querySelector('#questionForm');
        const questionCategory = document.querySelector('#questionCategory');
        const formResponse = document.querySelector('#formResponse');

        // Methods
        const getFormSubmitREsponse = () => {
            myFormQuestion.addEventListener('submit', event => {
                // Stop default to use Javascript
                event.preventDefault();

                console.log(headlineQuestion.value())
                console.log(headlineQuestion.value().length)

                // Check form values
                if( headlineQuestion.value().length > 19 && questionCategory.value !== 'NULL'){

                    // Display loader
                    openLoaderUX(
                        '#loaderMessage', 
                        '#loader', 
                        'Enregistrement du message...'
                    )

                    // Use asyncFetch method to save data
                    asyncFetch('/api/question', 'POST', { headline:  headlineQuestion.value(), about: questionCategory.value })
                    .then( data => {
                        // Change loader
                        openLoaderUX(
                            '#loaderMessage', 
                            '#loader', 
                            'Question enregistrée !',
                            '/'
                        )
                    })
                    .catch( err => {
                        // Change loader
                        changeLoaderUX(
                            '#loaderMessage', 
                            '#loader', 
                            err.status === 500 ? 'La question à déjà été posée...' : 'Problème réseeau merci de recommencer',
                            null
                        )
                    } )
                }
            })
        }

        // Start interface
        getFormSubmitREsponse();
    })
</script>